<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 加载数据库连接配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="5" />
	</bean>

	<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载SqlSessionFactory的配置文件 -->
		<property name="configLocation" value="SqlMapConfig.xml" />
		<!-- 配置SQLSessionFactory的数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="userDao" class="com.example.mybatis_spring.dao.impl.UserDaoImpl">
	    <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- 配置代理mapper,此类继承了SQLSessionDaoSupport,所以需要配置sqlSessionFactory -->
	<!-- mapperInterface指定mapper接口,如果要指定多个mapper不能使用通配符,可以通过扫描 -->
	<bean id="mapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.example.mybatis_spring.mapper.UserMapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	
	<!-- 批量扫描mapper代理对象的包，不需要指定id -->
		<!-- 指定要扫描的包，如果要扫描多个包,不能使用通配符,通过 ',' 隔开多个包 -->
		<!-- 扫描到的mapper的bean的id默认为类名首字母小写 -->
		<!-- 扫描mapper包下的mapper类加入IOC容器并自动赋予id,此mapper扫描和mybatis的扫描不一样 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.example.mybatis_spring.mapper"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean> -->
	
	<!-- 版本问题，这个暂时执行不了 -->

</beans>